from telethon import events, Button
from loguru import logger
from typing import List, Optional
from database.db import Database
from database.models import Contact
from utils.telegram_contacts import TelegramContactsManager
import Config

class ContactHandler:
    def __init__(self, client, db: Database):
        self.client = client
        self.db = db
        self.telegram_contacts = TelegramContactsManager(client)
        self.setup_handlers()

    def setup_handlers(self):
        """–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –∫–æ–Ω—Ç–∞–∫—Ç–∞–º–∏"""
        self.client.add_event_handler(
            self.handle_contacts_menu,
            events.CallbackQuery(pattern=b'contacts_menu')
        )
        self.client.add_event_handler(
            self.handle_add_contact,
            events.CallbackQuery(pattern=b'add_contact')
        )
        self.client.add_event_handler(
            self.handle_search_contact,
            events.CallbackQuery(pattern=b'search_contact')
        )
        self.client.add_event_handler(
            self.handle_add_to_telegram,
            events.CallbackQuery(pattern=b'add_to_telegram_')
        )

    async def get_contacts_keyboard(self) -> List[List[Button]]:
        """–°–æ–∑–¥–∞–Ω–∏–µ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –¥–ª—è –º–µ–Ω—é –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤"""
        return [
            [Button.inline("‚ûï –î–æ–±–∞–≤–∏—Ç—å –∫–æ–Ω—Ç–∞–∫—Ç", b"add_contact")],
            [Button.inline("üîç –ü–æ–∏—Å–∫ –∫–æ–Ω—Ç–∞–∫—Ç–∞", b"search_contact")],
            [Button.inline("üìã –°–ø–∏—Å–æ–∫ –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤", b"list_contacts")],
            [Button.inline("‚¨ÖÔ∏è –ù–∞–∑–∞–¥ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", b"admin_menu")]
        ]

    async def handle_contacts_menu(self, event):
        """–û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—Ç–∫—Ä—ã—Ç–∏—è –º–µ–Ω—é –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤"""
        if not self.db.is_admin(event.sender_id):
            await event.answer("‚õî –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞.", alert=True)
            return

        await event.edit(
            "üìá –ú–µ–Ω—é —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∫–æ–Ω—Ç–∞–∫—Ç–∞–º–∏\n\n"
            "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:",
            buttons=await self.get_contacts_keyboard()
        )

    async def handle_add_contact(self, event):
        """–û–±—Ä–∞–±–æ—Ç–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –Ω–æ–≤–æ–≥–æ –∫–æ–Ω—Ç–∞–∫—Ç–∞"""
        if not self.db.is_admin(event.sender_id):
            await event.answer("‚õî –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞.", alert=True)
            return

        # –ü–µ—Ä–µ–≤–æ–¥–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ —Ä–µ–∂–∏–º –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∫–æ–Ω—Ç–∞–∫—Ç–∞
        await event.edit(
            "üë§ –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–æ–≤–æ–≥–æ –∫–æ–Ω—Ç–∞–∫—Ç–∞\n\n"
            "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –∫–æ–Ω—Ç–∞–∫—Ç –≤ —Ñ–æ—Ä–º–∞—Ç–µ:\n"
            "–ò–º—è\n–¢–µ–ª–µ—Ñ–æ–Ω\n–ü—Ä–∏–º–µ—á–∞–Ω–∏–µ (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)"
        )
        
        # –î–æ–±–∞–≤–ª—è–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –∫–æ–Ω—Ç–∞–∫—Ç–∞
        @self.client.on(events.NewMessage(from_users=event.sender_id))
        async def contact_data_handler(msg_event):
            try:
                # –ü–∞—Ä—Å–∏–º –¥–∞–Ω–Ω—ã–µ –∫–æ–Ω—Ç–∞–∫—Ç–∞
                lines = msg_event.text.split('\n')
                if len(lines) < 2:
                    await msg_event.reply(
                        "‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç!\n"
                        "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –¥–∞–Ω–Ω—ã–µ –≤ —Ñ–æ—Ä–º–∞—Ç–µ:\n"
                        "–ò–º—è\n–¢–µ–ª–µ—Ñ–æ–Ω\n–ü—Ä–∏–º–µ—á–∞–Ω–∏–µ (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)"
                    )
                    return

                name = lines[0].strip()
                phone = lines[1].strip()
                note = lines[2].strip() if len(lines) > 2 else None

                # –î–æ–±–∞–≤–ª—è–µ–º –∫–æ–Ω—Ç–∞–∫—Ç –≤ –±–∞–∑—É
                contact_id = self.db.add_contact(name, phone, note)
                
                # –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –¥–æ–±–∞–≤–ª—è–µ–º –∫–æ–Ω—Ç–∞–∫—Ç –≤ Telegram (–µ—Å–ª–∏ –≤–∫–ª—é—á–µ–Ω–æ)
                telegram_result = None
                if Config.AUTO_IMPORT_TO_TELEGRAM:
                    try:
                        telegram_result = await self.telegram_contacts.add_contact_to_telegram(name, phone)
                        
                        if telegram_result["success"]:
                            # –û–±–Ω–æ–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –≤ –±–∞–∑–µ
                            self.db.update_contact_telegram_id(contact_id, telegram_result["user_id"])
                            logger.info(f"üì± –ö–æ–Ω—Ç–∞–∫—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –¥–æ–±–∞–≤–ª–µ–Ω –≤ Telegram: {name}")
                        
                    except Exception as e:
                        logger.warning(f"–ù–µ —É–¥–∞–ª–æ—Å—å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –¥–æ–±–∞–≤–∏—Ç—å –∫–æ–Ω—Ç–∞–∫—Ç –≤ Telegram: {e}")

                # –§–æ—Ä–º–∏—Ä—É–µ–º –æ—Ç–≤–µ—Ç–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
                response_text = (
                    f"‚úÖ –ö–æ–Ω—Ç–∞–∫—Ç —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω!\n\n"
                    f"üë§ –ò–º—è: {name}\n"
                    f"üì± –¢–µ–ª–µ—Ñ–æ–Ω: {phone}\n"
                    f"üìù –ü—Ä–∏–º–µ—á–∞–Ω–∏–µ: {note if note else '-'}\n"
                )
                
                # –î–æ–±–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ Telegram
                if telegram_result:
                    if telegram_result["success"]:
                        username_info = f" (@{telegram_result['username']})" if telegram_result["username"] else ""
                        response_text += f"\nüì≤ Telegram: –î–æ–±–∞–≤–ª–µ–Ω{username_info}"
                    else:
                        response_text += f"\n‚ö†Ô∏è Telegram: {telegram_result['message']}"

                await msg_event.reply(response_text)

                # –í–æ–∑–≤—Ä–∞—â–∞–µ–º –º–µ–Ω—é –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤
                await msg_event.respond(
                    "üìá –ú–µ–Ω—é —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∫–æ–Ω—Ç–∞–∫—Ç–∞–º–∏",
                    buttons=await self.get_contacts_keyboard()
                )

                # –£–¥–∞–ª—è–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫
                self.client.remove_event_handler(contact_data_handler)

            except Exception as e:
                logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –∫–æ–Ω—Ç–∞–∫—Ç–∞: {e}")
                await msg_event.reply("‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –∫–æ–Ω—Ç–∞–∫—Ç–∞.")

    async def handle_search_contact(self, event):
        """–û–±—Ä–∞–±–æ—Ç–∫–∞ –ø–æ–∏—Å–∫–∞ –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤"""
        if not self.db.is_admin(event.sender_id):
            await event.answer("‚õî –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞.", alert=True)
            return

        await event.edit(
            "üîç –ü–æ–∏—Å–∫ –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤\n\n"
            "–í–≤–µ–¥–∏—Ç–µ –∏–º—è –∏–ª–∏ –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –¥–ª—è –ø–æ–∏—Å–∫–∞:"
        )

        @self.client.on(events.NewMessage(from_users=event.sender_id))
        async def search_handler(msg_event):
            try:
                query = msg_event.text.strip()
                contacts = self.db.search_contacts(query)

                if not contacts:
                    await msg_event.reply(
                        "‚ùå –ö–æ–Ω—Ç–∞–∫—Ç—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã.",
                        buttons=await self.get_contacts_keyboard()
                    )
                    return

                # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–ø–∏—Å–æ–∫ –Ω–∞–π–¥–µ–Ω–Ω—ã—Ö –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤
                result = "üîç –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø–æ–∏—Å–∫–∞:\n\n"
                for contact in contacts:
                    result += (
                        f"üë§ {contact.name}\n"
                        f"üì± {contact.phone}\n"
                        f"üìù {contact.note if contact.note else '-'}\n"
                        f"‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ\n"
                    )

                await msg_event.reply(
                    result,
                    buttons=[[Button.inline(f"‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å {contact.name}", 
                             f"edit_contact_{contact.id}".encode())] for contact in contacts] +
                            [[Button.inline("‚¨ÖÔ∏è –ù–∞–∑–∞–¥", b"contacts_menu")]]
                )

                # –£–¥–∞–ª—è–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫
                self.client.remove_event_handler(search_handler)

            except Exception as e:
                logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–∏—Å–∫–µ –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤: {e}")
                await msg_event.reply("‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–∏—Å–∫–µ –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤.")

    async def handle_add_to_telegram(self, event):
        """–û–±—Ä–∞–±–æ—Ç–∫–∞ —Ä—É—á–Ω–æ–≥–æ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∫–æ–Ω—Ç–∞–∫—Ç–∞ –≤ Telegram"""
        if not Config.is_admin(event.sender_id) and not self.db.is_admin(event.sender_id):
            await event.answer("‚õî –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞.", alert=True)
            return

        try:
            # –ò–∑–≤–ª–µ–∫–∞–µ–º ID –∫–æ–Ω—Ç–∞–∫—Ç–∞ –∏–∑ callback_data
            contact_id = int(event.data.decode().split('_')[-1])
            contact = self.db.get_contact(contact_id)
            
            if not contact:
                await event.answer("‚ùå –ö–æ–Ω—Ç–∞–∫—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω.", alert=True)
                return

            await event.answer("üì± –î–æ–±–∞–≤–ª—è—é –∫–æ–Ω—Ç–∞–∫—Ç –≤ Telegram...", alert=False)
            
            # –î–æ–±–∞–≤–ª—è–µ–º –∫–æ–Ω—Ç–∞–∫—Ç –≤ Telegram
            result = await self.telegram_contacts.add_contact_to_telegram(contact.name, contact.phone)
            
            if result["success"]:
                # –û–±–Ω–æ–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –≤ –±–∞–∑–µ
                self.db.update_contact_telegram_id(contact_id, result["user_id"])
                
                username_info = f" (@{result['username']})" if result["username"] else ""
                await event.edit(
                    f"‚úÖ –ö–æ–Ω—Ç–∞–∫—Ç –¥–æ–±–∞–≤–ª–µ–Ω –≤ Telegram!\n\n"
                    f"üë§ {contact.name}\n"
                    f"üì± {contact.phone}\n"
                    f"üì≤ Telegram ID: {result['user_id']}{username_info}",
                    buttons=[[Button.inline("‚¨ÖÔ∏è –ù–∞–∑–∞–¥ –∫ –∫–æ–Ω—Ç–∞–∫—Ç–∞–º", b"contacts_menu")]]
                )
            else:
                await event.edit(
                    f"‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –¥–æ–±–∞–≤–∏—Ç—å –∫–æ–Ω—Ç–∞–∫—Ç –≤ Telegram\n\n"
                    f"üë§ {contact.name}\n"
                    f"üì± {contact.phone}\n"
                    f"‚ö†Ô∏è –ü—Ä–∏—á–∏–Ω–∞: {result['message']}",
                    buttons=[[Button.inline("‚¨ÖÔ∏è –ù–∞–∑–∞–¥ –∫ –∫–æ–Ω—Ç–∞–∫—Ç–∞–º", b"contacts_menu")]]
                )
                
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –∫–æ–Ω—Ç–∞–∫—Ç–∞ –≤ Telegram: {e}")
            await event.answer("‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –∫–æ–Ω—Ç–∞–∫—Ç–∞.", alert=True) 